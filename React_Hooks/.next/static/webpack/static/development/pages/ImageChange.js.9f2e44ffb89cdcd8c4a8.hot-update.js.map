{"version":3,"file":"static/webpack/static/development/pages/ImageChange.js.9f2e44ffb89cdcd8c4a8.hot-update.js","sources":["webpack:///./pages/ImageChange.js","webpack:///./src/ImageHoverScrollEffect.js"],"sourcesContent":["import React from \"react\";\nimport ImageHoverScrollEffect from \"../src/ImageHoverScrollEffect\";\n\nconst ImageChange = () => {\n  return (\n    <div>\n      <ImageHoverScrollEffect\n        primaryImg={\"/static/image1.png\"}\n        secondaryImg={\"static/image2.png\"}\n        alt={\"image_1\"}\n      />\n      &nbsp; &nbsp; &nbsp;\n      <ImageHoverScrollEffect\n        primaryImg={\"static/image2.png\"}\n        secondaryImg={\"/static/image1.png\"}\n        alt={\"image_1\"}\n      />\n    </div>\n  );\n};\n\nexport default ImageChange;\n","import React, { useRef, useEffect, useState } from \"react\";\n\nconst ImageHoverScrollEffect = (prop) => {\n  const imgRef = useRef(null);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []);\n\n  const [inview, setInview] = useState(false);\n\n  const isInview = () => {\n    if (imgRef.current) {\n      const rect = imgRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n  };\n\n  const scrollHandler = () => {\n    setInview(() => {\n      return isInview();\n    });\n  };\n\n  return (\n    <img\n      src={inview ? prop.secondaryImg : prop.primaryImg}\n      alt={prop.alt}\n      width='500'\n      ref={imgRef}\n    />\n  );\n};\n\nexport default ImageHoverScrollEffect;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}